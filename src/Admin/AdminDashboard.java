/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import Logs.ForgetPass;
import Logs.Login;
import dbConnect.ImageHandler;
import dbConnect.dbConnector;
import dbconnect.Session;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Windows 10
 */
public class AdminDashboard extends javax.swing.JFrame {
      private static String userImagePath = null;
      private static String i_username;
    
    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard(String username, String imgPath) {
        initComponents();
        
       this.i_username = username;
        
        userImagePath = imgPath;
       loadUserData();
        
        
    }

   
     private String saveImageToFolder(String email) {
    try {
        Icon icon = profile.getIcon();
        if (icon instanceof ImageIcon) {
            Image image = ((ImageIcon) icon).getImage();
            BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = bufferedImage.createGraphics();
            g2.drawImage(image, 0, 0, null);
            g2.dispose();

            String folderPath = "src/usersImages/";
            File directory = new File(folderPath);
            if (!directory.exists()) {
                directory.mkdirs();
            }

            String filePath = folderPath + email + ".jpg";
            File outputFile = new File(filePath);
            ImageIO.write(bufferedImage, "jpg", outputFile);

            return filePath;
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving image: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    return null;
}
    
   private void loadUserData() {
        String url = "jdbc:mysql://localhost:3306/property";
        String dbUser = "root";
        String dbPass = "";

        try (Connection conn = DriverManager.getConnection(url, dbUser, dbPass)) {
            String query = "SELECT i_image FROM user WHERE i_username = ?";
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, i_username);
                try (ResultSet rs = pstmt.executeQuery()) {
                    if (rs.next()) {
                        String imagePath = rs.getString("i_image");

                        if (imagePath != null && !imagePath.isEmpty()) {
                            File file = new File(imagePath);
                            if (file.exists()) {
                                ImageIcon icon = new ImageIcon(imagePath);
                                Image img = icon.getImage().getScaledInstance(profile.getWidth(), profile.getHeight(), Image.SCALE_SMOOTH);
                                profile.setIcon(new ImageIcon(img));
                            } else {
                                JOptionPane.showMessageDialog(this, "Image file not found: " + imagePath, "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "User not found.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

   
     private void logActivity(int Iid, String action) {
        String sql = "INSERT INTO logs_table (i_id, logs_action, logs_date) VALUES (?, ?, NOW())";
        dbConnector db = new dbConnector();

        try (Connection conn = db.getConnection();
                PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setInt(1, Iid);
            pst.setString(2, action);
            pst.executeUpdate();
        } catch (SQLException e) {
            System.err.println("Error logging activity: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        profile = new javax.swing.JLabel();
        acc_fname = new javax.swing.JLabel();
        acc_lname = new javax.swing.JLabel();
        acc_username = new javax.swing.JLabel();
        acc_email = new javax.swing.JLabel();
        acc_cnum = new javax.swing.JLabel();
        acc_type = new javax.swing.JLabel();
        Select = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        wctext = new javax.swing.JLabel();
        Logout = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Property = new javax.swing.JButton();
        Client = new javax.swing.JButton();
        Sale = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        profile.setBackground(new java.awt.Color(153, 255, 255));
        profile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-administrator-male-100.png"))); // NOI18N
        profile.setOpaque(true);
        getContentPane().add(profile, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 200, 140));

        acc_fname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        acc_fname.setText("FirstName");
        getContentPane().add(acc_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 230, 40));

        acc_lname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        acc_lname.setText("LastName");
        getContentPane().add(acc_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 230, 40));

        acc_username.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        acc_username.setText("UserName");
        getContentPane().add(acc_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 230, 40));

        acc_email.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        acc_email.setText("Email");
        getContentPane().add(acc_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 230, 40));

        acc_cnum.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        acc_cnum.setText("Phone  #");
        getContentPane().add(acc_cnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 230, 40));

        acc_type.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        acc_type.setText("Type ");
        getContentPane().add(acc_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 230, 40));

        Select.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Select.setText("Select File");
        Select.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectMouseClicked(evt);
            }
        });
        Select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectActionPerformed(evt);
            }
        });
        getContentPane().add(Select, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 100, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Update Profile");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel4.setOpaque(true);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 100, 30));

        jLabel2.setBackground(new java.awt.Color(153, 255, 255));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 240, 450));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        wctext.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        wctext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wctext.setText("ADMIN DASHBOARD");
        jPanel5.add(wctext, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 420, 30));

        Logout.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Logout.setText("Logout");
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LogoutMouseExited(evt);
            }
        });
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        jPanel5.add(Logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 160, 30));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 50));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Property.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Property.setText("Property");
        Property.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PropertyMouseClicked(evt);
            }
        });
        Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropertyActionPerformed(evt);
            }
        });
        jPanel2.add(Property, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 160, 40));

        Client.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Client.setText("Accounts");
        Client.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientActionPerformed(evt);
            }
        });
        jPanel2.add(Client, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 160, 40));

        Sale.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Sale.setText("View All Property");
        Sale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaleMouseClicked(evt);
            }
        });
        Sale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaleActionPerformed(evt);
            }
        });
        jPanel2.add(Sale, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 160, 40));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Password Recovery");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 160, 40));

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Logs");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 160, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 480, 450));

        jLabel3.setBackground(new java.awt.Color(153, 153, 255));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 240, 450));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropertyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PropertyActionPerformed

    private void ClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientActionPerformed
        U_Admin ua = new U_Admin(i_username, userImagePath);
        ua.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ClientActionPerformed

    private void LogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseExited

    }//GEN-LAST:event_LogoutMouseExited

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
       
    }//GEN-LAST:event_LogoutActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Session sess = Session.getInstance();
        if(sess.getIid() == 0)
        {
           JOptionPane.showMessageDialog(null, "No Account, Login First");
            Login l = new Login();
            l.setVisible(true);
            this.dispose();
        }else
        {
            acc_fname.setText("FirstName : " + sess.getFname());
            acc_lname.setText("LastName : " + sess.getLname());
            acc_username.setText("UserName : " + sess.getUsername());
            acc_type.setText("UserType : " + sess.getType());
            acc_email.setText("User Email : " + sess.getEmail());
            acc_cnum.setText("Phonenumber : " + sess.getPhone());
        }
    }//GEN-LAST:event_formWindowActivated

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        new Logs_Admin(i_username, userImagePath).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        String url = "jdbc:mysql://localhost:3306/property";
        String user = "root";
        String pass = "";

        try (Connection conn = DriverManager.getConnection(url, user, pass)) {
            String selectQuery = "SELECT i_username FROM user WHERE i_username = ?";
            try (PreparedStatement selectPstmt = conn.prepareStatement(selectQuery)) {
                selectPstmt.setString(1, i_username);
                try (ResultSet rs = selectPstmt.executeQuery()) {
                    if (rs.next()) {
                        // Save Image
                        String imagePath = saveImageToFolder(i_username); // Save and get the file path

                        // Update user details along with the image path
                        String updateQuery = "UPDATE user SET  i_image = ? WHERE i_username = ?";
                        try (PreparedStatement updatePstmt = conn.prepareStatement(updateQuery)) {
                            updatePstmt.setString(1, imagePath);
                            updatePstmt.setString(2, i_username);

                            int rowsUpdated = updatePstmt.executeUpdate();
                            if (rowsUpdated > 0) {
                                JOptionPane.showMessageDialog(this, "Account information updated successfully!");
                               
                                Session session = Session.getInstance();
                                int userId = session.getIid();

                                if (userId != -1) {
                                   logActivity(userId, "Updated account image for user: " + i_username);
                                } else {
                                    System.err.println("Session user ID not set. Cannot log password change activity.");
                                }

                            } else {
                                JOptionPane.showMessageDialog(this, "Update failed. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "User not found.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void LogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseClicked
      String sql = "SELECT i_id FROM user WHERE i_username = ?"; 
    
    dbConnector db = new dbConnector();

    try (Connection conn = db.getConnection();
         PreparedStatement pst = conn.prepareStatement(sql)) {

        pst.setString(1, i_username); // Use logged-in username

        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            int userId = rs.getInt("i_id");

            // Confirm logout
            int response = JOptionPane.showConfirmDialog(this,
                "Confirm Log Out?",
                "Logout Confirmation",
                JOptionPane.YES_NO_OPTION);

            if (response == JOptionPane.YES_OPTION) {
                // Log the logout activity
                logActivity(userId, "Admin Logged out");

                // Redirect to login screen
                new Login().setVisible(true);
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(this, "User not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_LogoutMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        ForgetPass fp =new ForgetPass();
        fp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void SelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SelectActionPerformed

    private void SelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectMouseClicked
       ImageHandler.chooseImage(profile);
    }//GEN-LAST:event_SelectMouseClicked

    private void PropertyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PropertyMouseClicked
        Property pt = new Property();
        pt.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_PropertyMouseClicked

    private void SaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaleActionPerformed
      ViewAllproperty vap = new ViewAllproperty(i_username, userImagePath);
vap.setVisible(true);
this.dispose();
       // TODO add your handling code here:
    }//GEN-LAST:event_SaleActionPerformed

    private void SaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaleMouseClicked

    }//GEN-LAST:event_SaleMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 String imgPath = "path/to/default/image.png";
                new AdminDashboard(i_username,imgPath).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Client;
    private javax.swing.JButton Logout;
    private javax.swing.JButton Property;
    private javax.swing.JButton Sale;
    private javax.swing.JButton Select;
    private javax.swing.JLabel acc_cnum;
    private javax.swing.JLabel acc_email;
    private javax.swing.JLabel acc_fname;
    private javax.swing.JLabel acc_lname;
    private javax.swing.JLabel acc_type;
    private javax.swing.JLabel acc_username;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel profile;
    private javax.swing.JLabel wctext;
    // End of variables declaration//GEN-END:variables
}
