/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import dbConnect.dbConnector;
import dbconnect.Session;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Windows 10
 */
public class U_Admin extends javax.swing.JFrame {
private static String userImagePath = null;
      private static String i_username;
    /**
     * Creates new form U_Admin
     */
    public U_Admin(String username, String imgPath) {
        initComponents();
        this.i_username = username;
        
        userImagePath = imgPath;
        displayData();
    }

    public void displayData()
    {
        try
        {
            dbConnector dbc = new dbConnector();
            ResultSet rs = dbc.getData("SELECT i_id, i_lname, i_fname, i_username, "
                                        + "i_email, i_type, i_phonenumber, status FROM user");
            tbl_user.setModel(DbUtils.resultSetToTableModel(rs));
             rs.close();
        }catch(SQLException ex){
            System.out.println("Errors: "+ex.getMessage());
        }
    }

    private void logActivity(int Iid, String action) {
        String sql = "INSERT INTO logs_table (i_id, logs_action, logs_date) VALUES (?, ?, NOW())";
        dbConnector db = new dbConnector();

        try (Connection conn = db.getConnection();
                PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setInt(1, Iid);
            pst.setString(2, action);
            pst.executeUpdate();
        } catch (SQLException e) {
            System.err.println("Error logging activity: " + e.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        Back = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Refresh = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_user = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Back.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Back.setText("Back");
        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackMouseExited(evt);
            }
        });
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        jPanel3.add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 140, 40));

        Add.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Add.setText("Add");
        Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMouseClicked(evt);
            }
        });
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        jPanel3.add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 140, 40));

        Remove.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Remove.setText("Remove");
        Remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveMouseClicked(evt);
            }
        });
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });
        jPanel3.add(Remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 140, 40));

        Update.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Update.setText("Update");
        Update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateMouseClicked(evt);
            }
        });
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        jPanel3.add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 140, 40));

        Refresh.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Refresh.setText("Refresh");
        Refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefreshMouseClicked(evt);
            }
        });
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        jPanel3.add(Refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 140, 40));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ADMIN DASHBOARD");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 500, 30));

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 50));

        tbl_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbl_user);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 620, 370));

        jLabel3.setBackground(new java.awt.Color(204, 255, 255));
        jLabel3.setOpaque(true);
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 180, 380));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        AdminDashboard ad = new AdminDashboard(i_username, userImagePath);
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackMouseClicked

    private void BackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseExited

    }//GEN-LAST:event_BackMouseExited

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        CreateUserForm cuf =  new CreateUserForm(i_username, userImagePath);
        cuf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AddActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RemoveActionPerformed

    private void UpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateMouseClicked
//        int rowIndex = tbl_user.getSelectedRow();
//        
//        if(rowIndex < 0)
//        {
//            JOptionPane.showMessageDialog(null, "Please select an Item");
//        }else
//        {
//            CreateUserForm cuf = new CreateUserForm();
//            
//            try
//            {
//                dbConnector dbc = new dbConnector();
//                TableModel tbl_user = table.getModel();
//                ResultSet rs = dbc.getData("SELECT * FROM tbl_accounts WHERE u_id = '"+tbl_user.getValueAt(rowIndex,0)+"'");
//                if(rs.next())
//                {
//                    
//                    cuf.IID.setText("" + rs.getString("u_id"));
//                    cuf.fname.setText("" +rs.getString("u_fname"));
//                    cuf.lname.setText("" + rs.getString("u_lname"));
//                    cuf.username.setText("" + rs.getString("u_username"));
//                    cuf.type.setSelectedItem("" + rs.getString("u_type"));
//                    cuf.status.setSelectedItem("" + rs.getString("u_status"));
////                    cuf.MR_password.setText("" + rs.getString("u_password"));
//                    cuf.cnum.setText("" + rs.getString("u_phone"));
//                    cuf.add.setEnabled(false);
//                    cuf.update.setEnabled(true);
//
//                    cuf.setVisible(true);
//                    this.dispose();
//                }
//                
//            }catch(SQLException ex)
//            {
//                System.out.println(""+ex);
//            }
//        }
    }//GEN-LAST:event_UpdateMouseClicked

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        int rowIndex = tbl_user.getSelectedRow();

    if (rowIndex < 0) {
        JOptionPane.showMessageDialog(null, "Please select an item");
    } else {
        CreateUserForm cuf = new CreateUserForm(i_username, userImagePath);

        try {
            dbConnector dbc = new dbConnector();
            TableModel tbl = tbl_user.getModel();
            String selectedUserId = tbl.getValueAt(rowIndex, 0).toString();

            ResultSet rs = dbc.getData("SELECT * FROM user WHERE i_id = '" + selectedUserId + "'");
            if (rs.next()) {
                String selectedUserType = rs.getString("i_type");

                cuf.IID.setText(rs.getString("i_id"));
                cuf.fname.setText(rs.getString("i_fname"));
                cuf.lname.setText(rs.getString("i_lname"));
                cuf.username.setText(rs.getString("i_username"));
                cuf.email.setText(rs.getString("i_email"));
                cuf.cnum.setText(rs.getString("i_phonenumber"));
                cuf.type.setSelectedItem(rs.getString("i_type"));
                cuf.status.setSelectedItem(rs.getString("status"));
                cuf.add.setEnabled(false);
                cuf.update.setEnabled(true);

                // ✅ Only log if the selected user is NOT an admin
                if (!selectedUserType.equalsIgnoreCase("admin")) {
                    Session session = Session.getInstance();
                    int adminId = session.getIid(); 
                    if (adminId != -1) {
                        logActivity(adminId, "Opened USER record for update:  " + selectedUserId);
                    }
                }

                cuf.setVisible(true);
                this.dispose();
            }

        } catch (SQLException ex) {
            System.out.println("" + ex);
        }
    }
    }//GEN-LAST:event_UpdateActionPerformed

    private void RefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMouseClicked

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshActionPerformed

    private void AddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMouseClicked
        CreateUserForm cuf = new CreateUserForm(i_username, userImagePath);
        cuf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AddMouseClicked

    private void RemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveMouseClicked
       int rowIndex = tbl_user.getSelectedRow(); // get selected row from the table

    if (rowIndex < 0) {
        JOptionPane.showMessageDialog(this, "Please select a user from the table.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String i_username = tbl_user.getValueAt(rowIndex, 4).toString(); // Assuming column 3 = username

    String url = "jdbc:mysql://localhost:3306/rems";
    String user = "root";
    String pass = "";

    try {
        Connection conn = DriverManager.getConnection(url, user, pass);

        // Get target user's info
        String getIdQuery = "SELECT i_id, i_fname, i_lname FROM user WHERE i_username = ?";
        PreparedStatement idStmt = conn.prepareStatement(getIdQuery);
        idStmt.setString(1, i_username);
        ResultSet rs = idStmt.executeQuery();

        int targetUserId = -1;
        String fullName = "";

        if (rs.next()) {
            targetUserId = rs.getInt("i_id");
            fullName = rs.getString("i_fname") + " " + rs.getString("i_lname");
        } else {
            JOptionPane.showMessageDialog(this, "User not found in the database.", "Error", JOptionPane.ERROR_MESSAGE);
            rs.close();
            conn.close();
            return;
        }

        rs.close();
        idStmt.close();

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete: " + fullName + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            conn.close();
            return;
        }

        // Delete user
        String sql = "DELETE FROM user WHERE i_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, targetUserId);

        int rowsDeleted = pstmt.executeUpdate();
        pstmt.close();

        if (rowsDeleted > 0) {
            JOptionPane.showMessageDialog(this, "User deleted successfully!");

            // Log activity
            Session session = Session.getInstance();
            int sessionUserId = session.getIid();
            logActivity(sessionUserId, "Deleted user account: " + fullName);

        } else {
            JOptionPane.showMessageDialog(this, "Deletion failed.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        conn.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_RemoveMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(U_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(U_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(U_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(U_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                  String imgPath = "path/to/default/image.png";
                new U_Admin(i_username, imgPath).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Back;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton Remove;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_user;
    // End of variables declaration//GEN-END:variables
}
